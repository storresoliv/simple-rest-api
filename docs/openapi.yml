openapi: 3.0.0
info:
  title: API REST de Usuarios
  description: Esta es una API REST simple creada con Node.js y Express para gestionar usuarios (CRUD).
  version: 1.0.0
  contact:
    name: Tu Nombre
    url: https://www.tu-website.com
    email: contacto@tu-website.com
servers:
  - url: http://localhost:3000
    description: Servidor local para desarrollo
paths:
  /users:
    get:
      summary: Obtiene todos los usuarios
      description: Recupera la lista completa de usuarios en el sistema.
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    nombre:
                      type: string
                      example: "Ana"
    post:
      summary: Crea un nuevo usuario
      description: Crea un nuevo usuario en el sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: "Carlos"
      responses:
        '201':
          description: Usuario creado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  nombre:
                    type: string
                    example: "Carlos"
  /users/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: ID del usuario.
        schema:
          type: integer
    get:
      summary: Obtiene un usuario por su ID
      description: Recupera la información de un usuario específico.
      responses:
        '200':
          description: Usuario encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: "Ana"
        '404':
          description: Usuario no encontrado.
    put:
      summary: Actualiza un usuario por su ID
      description: Actualiza la información de un usuario existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: "Ana actualizada"
      responses:
        '200':
          description: Usuario actualizado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: "Ana actualizada"
        '404':
          description: Usuario no encontrado.
    delete:
      summary: Elimina un usuario por su ID
      description: Elimina un usuario del sistema por su ID.
      responses:
        '204':
          description: Usuario eliminado correctamente.
        '404':
          description: Usuario no encontrado.
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Ana"
